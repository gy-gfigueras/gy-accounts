pipeline {
    agent any

    environment {
        NVM_DIR = "${WORKSPACE}/.nvm"

        GITHUB_USER = 'gy-gfigueras'
        GITHUB_TOKEN = credentials('FRONT_GITHUB_TOKEN')

        MAIN_REPO = 'GY-CODING/gy-accounts'
        FORK_REPO = "${GITHUB_USER}/gy-accounts"
        WORKSPACE_DIR = 'gy-accounts'
        VERCEL_DEPLOY_URL = credentials('ACCOUNTS_VERCEL_DEPLOY_URL')
    }

    stages {
        stage('Prepare Repository') {
            steps {
                script {
                    if (fileExists(WORKSPACE_DIR)) {
                        echo "Repository already exists, updating..."
                        dir(WORKSPACE_DIR) {
                            sh '''
                            git reset --hard
                            git clean -fd
                            git checkout main
                            git pull origin main
                            '''
                        }
                    } else {
                        echo "Cloning repository..."
                        sh '''
                        git clone https://$GITHUB_USER:$GITHUB_TOKEN@github.com/$FORK_REPO.git $WORKSPACE_DIR
                        '''
                    }
                }
            }
        }

        stage('Sync Fork') {
            steps {
                script {
                    dir(WORKSPACE_DIR) {
                        sh '''
                        git remote add upstream https://github.com/$MAIN_REPO.git || true
                        git fetch upstream
                        git checkout main
                        git merge upstream/main --allow-unrelated-histories
                        git push origin main
                        '''
                    }
                }
            }
        }

        stage('Deploy to Vercel') {
            steps {
                script {
                    sh "curl -X POST $VERCEL_DEPLOY_URL"
                }
            }
        }

        stage('Create Release') {
            steps {
                script {
                    sh '''
                        if [ ! -d "$WORKSPACE/gy-accounts-original" ]; then
                            git clone https://github.com/$MAIN_REPO.git $WORKSPACE/gy-accounts-original
                        fi
                    '''

                    sh '''
                        cd $WORKSPACE/gy-accounts-original
                        git fetch origin
                        git checkout main
                        git pull origin main
                    '''

                    sh '''
                        cd $WORKSPACE/gy-accounts-original
                        ./with-node.sh npm run release
                    '''
                }
            }
        }
    }
}